// <auto-generated />
using System;
using BeaversTests.TestsManager.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeaversTests.TestsManager.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(TestsManagerContext))]
    [Migration("20240826215630_TestDriversAdded")]
    partial class TestDriversAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.BeaversTestPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TestDriverKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<Guid>("TestProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name", "TestProjectId");

                    b.HasIndex("TestDriverKey");

                    b.HasIndex("TestProjectId");

                    b.ToTable("TestPackages");
                });

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.TestDriver", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Key");

                    b.ToTable("TestDrivers");
                });

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.TestProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("TestProjects");
                });

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.BeaversTestPackage", b =>
                {
                    b.HasOne("BeaversTests.TestsManager.Core.Models.TestDriver", "TestDriver")
                        .WithMany("TestPackages")
                        .HasForeignKey("TestDriverKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversTests.TestsManager.Core.Models.TestProject", "TestProject")
                        .WithMany("TestPackages")
                        .HasForeignKey("TestProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestDriver");

                    b.Navigation("TestProject");
                });

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.TestDriver", b =>
                {
                    b.Navigation("TestPackages");
                });

            modelBuilder.Entity("BeaversTests.TestsManager.Core.Models.TestProject", b =>
                {
                    b.Navigation("TestPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
